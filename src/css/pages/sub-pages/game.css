@import url("../subpage.css");
@import url("../../components/progress-components.css");



:root {
	--columns: 9;
}



body {
	display: flex;
	/* flex-direction: row-reverse; */
	justify-content: space-between;
	align-items: center;
	/* flex-wrap: wrap; */

	overflow: hidden;

	gap: max(3.5vw, 3.5vh);
}

modal {
	height: fit-content;
	width: fit-content;

	gap: 1.5rem;

	text-align: center;

	box-shadow: 1px 9px 28px -6px rgba(0,0,0,0.5);
	-webkit-box-shadow: 1px 9px 28px -6px rgba(0,0,0,0.5);
	-moz-box-shadow: 1px 9px 28px -6px rgba(0,0,0,0.5);
} 

model > p {
	overflow: hidden;
	display: -webkit-box;
    -webkit-line-clamp: 3; /* number of lines to show */
    line-clamp: 3; 
    -webkit-box-orient: vertical;
}

modal > span {
	font-size: var(--size-700) !important;
}

modal > .row__container {
	width: 100%;

	flex-wrap: wrap;
	justify-content: flex-end;
}

modal.visible ~ .overlay__container {
	background: none;
}

.current-player__container {
	/* flex-wrap: wrap; */
	align-self: flex-start;
	gap: 2rem;
}

.player__container {
	width: fit-content;

	padding: 0.65rem 1.5rem;

	gap: 0.5rem;

	border-radius: 15px;

	color: var(--white);
	background-color: var(--dark-background);
	opacity: 1;

	transition: color var(--animation-speed), opacity var(--animation-speed), background-color var(--animation-speed), border-radius ease-out var(--animation-speed);
}

.player__container > span {
	font-size: 2rem;
}

.player__container > p {
	font-size: 0.85rem;
}

.player__container.active {
	border-radius: 30px; /* calc(0.65rem + 2rem) */
    transition: color var(--animation-speed), opacity var(--animation-speed), background-color var(--animation-speed), border-radius ease-out var(--animation-speed);
}

.player__container.lost {
	opacity: 0.7;
}


.active {
	color: var(--red);
    background-color: var(--red-background);
}


.action__container {
	align-self: flex-end;
	align-items: flex-end;
}


.board__container {
	width: 100%;
	height: 100%;

	display: grid;

	overflow: hidden;
}



.board {
	aspect-ratio: 1 / 1;
	width: 100%;
	max-height: 100%;

 	margin: auto;
	padding: min(3.5vw, 3.5vh); /* 1.5rem; */
	box-sizing: border-box;

	display: flex;
	flex-flow: row;
	flex-wrap: wrap;

	overflow: hidden;

	border: 2px solid rgba(42, 46, 57, 1);
  	border-radius: 1vh;
}

.board.disabled {
	pointer-events: none;
}

.board.inactive {
	opacity: 0.7;
}

.cell {
	aspect-ratio: 1 / 1;
	height: auto;
	width: auto;
	
	flex: 1 0 calc(100% / var(--columns));
  	display: flex;
  	justify-content: center;
  	align-items: center;
  
 	border: 1.25px solid rgba(42, 46, 57, 0.5);

	cursor: pointer;

	transition: var(--animation-speed); /* TODO: What does this do? */
}

.piece {
	aspect-ratio: 1 / 1;
    width: 80%;

	transform: scale(1);

	display: flex;
	justify-content: center;
	align-items: center;

	opacity: 1;
	
    border-radius: 100%;

	cursor: not-allowed;

	transition: opacity var(--animation-speed), transform var(--animation-speed);
}

.piece.new {
	transform: scale(0.5);

	opacity: 0;	

	transition: opacity var(--animation-speed), transform var(--animation-speed);
}

.piece > div {
	aspect-ratio: 1 / 1;
	width: 30%;

	border-radius: 100%;

	display: none;
}

.piece.no-highlight > div {
	display: none !important;
}

.piece.last > p,
.piece.no-numbers > p {
	display: none;
}

.piece.last > div {
	display: block;
}


.black-piece {
	color: var(--white);
}

.black-piece,
.white-piece > div {
	background-color: var(--black)
}

.white-piece {
	color: var(--black);
}

.white-piece,
.black-piece > div {
	background-color: var(--white)
}


/*=== Animations ===*/

.cell:empty:hover {
	background-color: var(--faded-background);
}

@media only screen and (max-width: 1157px) {

	.current-player__container {
		flex-wrap: wrap;
	}
}

@media only screen and (max-width: 900px) {
    body {
		flex-direction: column;
    }

	.current-player__container,
	.player__container,
	.action__container {
		align-self: unset;
		flex-direction: row;
	}

	.player__container {
		padding: 0.65rem;
	}

	.player__container > span {
		font-size: 1.5rem;
	}

	.action__container {
		align-items: center;
	}
}

@media only screen and (max-width: 420px) {
    .player__container > .hide__small {
		display: none;
	}
}